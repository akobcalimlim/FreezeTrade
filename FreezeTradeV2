local player = game.Players.LocalPlayer
local frame = script.Parent

local closeBtn = frame:WaitForChild("CloseButton")
local dropdownBtn = frame:WaitForChild("PetDropdown")
local petList = frame:WaitForChild("PetList")
local ageBox = frame:WaitForChild("AgeBox")
local weightBox = frame:WaitForChild("WeightBox")
local spawnBtn = frame:WaitForChild("SpawnButton")

local petsFolder = game.ReplicatedStorage:WaitForChild("Pets")
local chosenPet = nil

-- Close
closeBtn.MouseButton1Click:Connect(function()
	frame.Visible = false
end)

-- Dropdown toggle
dropdownBtn.MouseButton1Click:Connect(function()
	petList.Visible = not petList.Visible
end)

-- Fill dropdown with pets
for _, pet in ipairs(petsFolder:GetChildren()) do
	if pet:IsA("Model") then
		local option = Instance.new("TextButton")
		option.Size = UDim2.new(1, 0, 0, 30)
		option.Text = pet.Name
		option.Parent = petList

		option.MouseButton1Click:Connect(function()
			chosenPet = pet.Name
			dropdownBtn.Text = "Pet: " .. pet.Name
			petList.Visible = false
		end)
	end
end

-- Spawn
spawnBtn.MouseButton1Click:Connect(function()
	if not chosenPet then return end
	
	local petTemplate = petsFolder:FindFirstChild(chosenPet)
	if petTemplate then
		local newPet = petTemplate:Clone()
		newPet.Parent = workspace

		-- Spawn near player
		local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if root then
			newPet:MoveTo(root.Position + Vector3.new(3, 0, 3))
		end

		-- Attributes
		local age = tonumber(ageBox.Text) or 1
		local weight
